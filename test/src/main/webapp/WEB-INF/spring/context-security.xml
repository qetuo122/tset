<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
                                 http://www.springframework.org/schema/beans/spring-beans.xsd
                                 http://www.springframework.org/schema/security
                                 http://www.springframework.org/schema/security/spring-security.xsd">

	<http auto-config="true" use-expressions="true">
		<intercept-url pattern="/board/writeForm" access="hasRole('ROLE_MEMBER')" /> <!-- 글쓰기 폼은 멤버권한이 있어야함 -->
			<!-- <intercept-url pattern="/board/pwChk/**"
			access="hasRole('ROLE_MEMBER')" /> -->
		<intercept-url pattern="/board/boardView/**" access="hasRole('ROLE_MEMBER')" /> <!-- 상세보기 폼은 멤버권한이 있어야함 -->
		<intercept-url pattern="/board/**" access="hasAnyRole('ROLE_USER','ROLE_MEMBER')" /> <!-- 게시판 리스트 폼은 유저와 멤버권한이 있어야함 -->
		<intercept-url pattern="/**" access="permitAll" /> <!-- 첫페이지는 모든사람이 들어갈 수 있음 -->
		<form-login username-parameter="inputId" 
			password-parameter="inputPw" login-processing-url="/login"
			login-page="/" default-target-url="/board/list" authentication-success-handler-ref="loginSuccessHandler"/> <!-- 로그인폼에서 입력한 id와 pw값을 가져온 후 체크, 성공하면 게시판리스트페이지로 이동 -->
		<logout logout-url="/logout" logout-success-url="/" delete-cookies="JSESSIONID" invalidate-session="true" />
		<!-- <remember-me remember-me-cookie="remember_id" remember-me-parameter="remember_id" /> 쿠키를 생성함 -->
		<access-denied-handler
			error-page="/accessDenied" /> <!-- 권한이 거부되었을때 접근하는 페이지 설정 -->
			
	</http>
<beans:bean id = "loginSuccessHandler" class = "com.spring.board.handler.CustomLoginSuccessHandler"></beans:bean>
<!-- UserAuthenticationService에 @service 어노테이션을 등록하면 빈에 따로 등록해줄 필요가 없음 -->
	<!-- <beans:bean id = "userService" class = "com.spring.board.service.UserAuthenticationService"> 권한설정 서비스를 빈에 등록
		<beans:constructor-arg name = "sqlSession" ref = "sqlSession"></beans:constructor-arg>
	</beans:bean> --> 
	
<!-- mapper를 사용한다면 jdbc서비스를 등록 할 필요가 없음 -->	
	<!-- <jdbc-user-service data-source-ref="dataSource"
		id="userServices"
		users-by-username-query="select user_id as inputId, password as inputPw, enabled from user where user_id = ?"
		authorities-by-username-query="select user_id as inputId, authority from user where user_id = ?" /> -->
	<!-- <authentication-manager>
		<authentication-provider user-service-ref="userService">
			<user-service> <user name="user" password="userPw" authorities="ROLE_USER" 
				/> <user name="member" password="memPw" authorities="ROLE_MEMBER" /> </user-service>

		</authentication-provider>
	</authentication-manager> -->

</beans:beans>